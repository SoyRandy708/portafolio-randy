---
interface Props {
  title: string;
}

const { title } = Astro.props;
const { currentLocale } = Astro;
---

<!doctype html>
<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --color-primario: #14b5c6;
    --color-secundario: #177587;
    --background-color: #171717;
    --texto-color: #e3fdfd;
  }

  * {
    user-select: none;
    list-style: none;
    font-family: system-ui, sans-serifs;
    color: var(--texto-color);
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 16px;
    background-color: var(--background-color);
  }

  h2 {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 30px;
    font-weight: 500;
    margin: 20px 0;
  }

  a {
    display: flex;
    align-items: center;
    gap: 8px;
    white-space: nowrap;
    padding: 8px 12px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: opacity 0.3s ease;

    &:hover {
      opacity: 0.8;
    }
  }

  .boton-uno a,
  a.boton-uno {
    /* background: linear-gradient(45deg, red, blue); */
    /* background-color: var(--background-color); */
    background: linear-gradient(
      45deg,
      var(--color-secundario),
      var(--background-color)
    );
    color: var(--texto-color);

    path {
      color: var(--texto-color);
    }
  }

  @keyframes mostrar {
    from {
      opacity: 0;
      scale: 50%;
    }

    to {
      opacity: 1;
      scale: 100%;
    }
  }
</style>
