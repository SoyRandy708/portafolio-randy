---
import IconMenu from "@/Icons/IconMenu.astro";
import IconClose from "@/Icons/IconClose.astro";
import IconShow from "@/Icons/IconShow.astro";
import { getI18N, LANGUAGES } from "@/i18n";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<nav>
  <div class="nav-mobile">
    <ul class="idiomas boton-uno">
      {
        Object.values(LANGUAGES).map(({ code, flag, name }) => {
          const Bandera = flag;

          return code === currentLocale ? (
            <li>
              <a>
                <Bandera width="20" height="20" />
                {name}
                <IconShow class="icon" width="20" height="20" />
              </a>
            </li>
          ) : null;
        })
      }

      {
        Object.values(LANGUAGES).map(({ code, flag, name }) => {
          const Bandera = flag;

          return code !== currentLocale ? (
            <li>
              <a href={`/${code}/`}>
                <Bandera width="20" height="20" />
                {name}
              </a>
            </li>
          ) : null;
        })
      }
    </ul>

    <div class="iconos">
      <div class="icon">
        <IconMenu width="38" height="38" />
      </div>
      <div class="icon mobile">
        <IconClose width="38" height="38" />
      </div>
    </div>
  </div>

  <ul class="menu mobile boton-uno">
    {
      Object.values(i18n.SECTION_NAVBAR).map((item) => {
        return (
          <li>
            <a href={`#${item}`}> {item} </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<style>
  nav {
    position: fixed;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    max-width: 876px;
    width: calc(100% - 56px);
    min-height: 42px;
    margin: auto;
    border-radius: 8px;
    top: 20px;
    left: 0;
    right: 0;
    z-index: 10;
    padding: 16px 12px;
    box-shadow: 0 0 25px rgb(0 0 0 / 0.15);
    background-color: var(--color-primario);
    transition: transform 0.3s ease;

    @media (width > 600px) {
      flex-direction: row;
    }
  }

  .nav-mobile {
    display: flex;
    justify-content: space-between;
  }

  .idiomas {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 12px;
    position: relative;
    z-index: 20;
    padding: 0 16px;
    margin: 0;

    @media (width < 600px) {
      padding: 0;
    }

    li:first-child {
      z-index: 20;

      .icon {
        transition: transform 0.3s ease;
      }
    }

    &:hover li:last-child {
      transform: translateY(40px);
    }

    &:hover li:first-child .icon {
      transform: rotate(-180deg);
    }

    li:last-child {
      position: absolute;
      z-index: 1;
      transform: translateY(0px);
      transition: transform 0.3s ease;
      padding: 0;
      margin: auto;
    }

    li {
      width: 140px;

      a {
        opacity: 1;
      }
    }
  }

  .iconos {
    display: flex;
    justify-content: end;

    @media (width > 600px) {
      display: none;
    }

    path {
      color: var(--background-color);
    }
  }

  .menu {
    display: flex;
    flex-direction: column;
    gap: 20px;
    justify-content: space-between;
    max-width: 900px;
    padding: 32px 0px 0px;
    margin: 0;

    @media (width > 600px) {
      display: flex;
      flex-direction: row;
      align-items: center;
      padding: 0px 16px;
      max-width: 600px;
    }

    & li a {
      display: block;
    }
  }

  .mobile {
    @media (width < 600px) {
      display: none;
    }
  }

  .ocultar {
    transform: translateY(-100px);
  }
</style>

<script>
  const nav = document.querySelector("nav");
  const menu = document.querySelector(".menu");
  const buttons = document.querySelectorAll(".iconos .icon");
  const menuItems = document.querySelectorAll(".menu li");

  let isMenuOpen = false;
  let lastScrollTop = 0;

  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      isMenuOpen = !isMenuOpen;
      if (isMenuOpen) {
        menu.classList.remove("mobile");
      } else {
        menu.classList.add("mobile");
      }

      buttons.forEach((button) => {
        button.classList.toggle("mobile");
      });
    });
  });

  menuItems.forEach((item) => {
    item.addEventListener("click", () => {
      isMenuOpen = false;
      menu.classList.add("mobile");

      buttons.forEach((button) => {
        button.classList.toggle("mobile");
      });
    });
  });

  window.addEventListener("scroll", () => {
    let scrollTop = document.documentElement.scrollTop;

    if (scrollTop > lastScrollTop) {
      nav.classList.add("ocultar");

      if (isMenuOpen) {
        isMenuOpen = !isMenuOpen;

        menu.classList.add("mobile");
        buttons.forEach((button) => {
          button.classList.toggle("mobile");
        });
      }
    } else {
      nav.classList.remove("ocultar");
    }

    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
  });
</script>
